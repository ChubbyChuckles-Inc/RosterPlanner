feat: implement density mode switch (comfortable/compact) with persistence (Milestone 5.10.7)
feat: apply runtime theme QSS on variant change (fix menu theme toggle not updating UI)
feat: persist theme variant and expand QSS coverage (menus, tabs, lists, scrollbars)
fix: add semantic color aliases & proper QSS application so theme switching updates UI
feat(pipeline): deterministic primary club backfill ensuring all club overview teams persisted\n+\n+Rewrote Step 7d in run_full to always refetch primary club overview and generate both club_team_* and division-style team_roster_* files for every team listed. Added ordering fix in test stub so club overview HTML not shadowed by generic landing response. Added coverage test (test_pipeline_club_team_coverage) now passing.\n+
feat(export): add ExportService and integrate CSV/JSON export actions (Milestone 5.6)

feat(detail): scaffold Team Detail View (Milestone 5.1) with TeamDetailView widget, ViewModel, summary metrics, and opening integration; add unit & integration tests and mark roadmap 5.1 partial
feat(detail): complete Team Detail View (Milestone 5.1) adding bundle population, tests for population, and marking roadmap task complete
feat(detail): add column visibility persistence (Milestone 5.1.1) with service, toggle UI, unit & integration tests, and roadmap update
feat(detail): add inline player hover card (Milestone 5.1.2) with tooltip generation, hover handling, and tests
feat(detail): implement Player Detail View (Milestone 5.2) with PlayerDetailView + ViewModel, double-click integration from TeamDetailView, placeholder history generation, unit & integration tests, and roadmap update
feat(detail): add sparkline micro charts (Milestone 5.2.1) with SparklineBuilder service, trend column in TeamDetailView, column visibility integration, unit & integration tests, and roadmap update
feat(detail): implement Division Table View (Milestone 5.3) adding DivisionStandingEntry model, normalizer service, DivisionTableViewModel, DivisionTableView, MainWindow integration (open_division_table), placeholder rows, unit tests (normalizer), integration test (tab open/refresh), and roadmap update
feat(detail): add multi-column sorting (Milestone 5.3.1) via MultiColumnSorter service, DivisionTableView header integration (shift-click priority), programmatic API, unit & integration tests, and roadmap update
feat(data): integrate scraping into GUI with ScrapeRunner service, async worker, Data menu action (Run Full Scrape), team reload, unit tests, and README instructions
feat(detail): implement Club Detail View (Milestone 5.4) with ClubDetailView widget (division aggregation, type split), MainWindow integration (Data menu action), unit test, roadmap update
feat(detail): add HTML source preview panel (Milestone 5.5) with HtmlDiffService, HtmlSourceView (source + diff tabs), MainWindow context menu integration, unit tests, and roadmap update
feat(detail): add raw/clean HTML toggle (Milestone 5.5.1) with HtmlDiffService.clean_html, HtmlSourceView checkbox mode switching, tests, and roadmap update

feat(export): implement export presets management (Milestone 5.6.1) with ExportPresetsService (JSON persistence), MainWindow presets submenu, save preset action, column subset application, tests (round-trip + filtering), and roadmap update
feat(compare): add SplitTeamCompareView and MainWindow integration (Milestone 5.7) with context menu 'Compare With...', side-by-side team tabs, unit test, and roadmap update
feat(tabs): implement tab pinning & color tagging (Milestone 5.8) with TabMetadataPersistenceService, DocumentArea context menu, persistence, ordering, tests, and roadmap update
feat(data): add DataAuditService (Milestone 5.9.0) to scan scraped HTML assets, compute hashes, map ranking tables & team rosters, unit test, and roadmap update

feat(repos): define repository interface layer (Milestone 5.9.1) with domain dataclasses (Division, Team, Player, Match, Club), Protocol interfaces, in-memory protocol compliance test, and roadmap update
feat(repos): add SQLite-backed repositories (Milestone 5.9.2) with read-only implementations, factory helper, in-memory schema tests, and roadmap update
feat(ingest): add IngestionCoordinator (Milestone 5.9.3) with filename-based discovery via DataAuditService, idempotent division/team upserts, placeholder club inference, unit test, and roadmap update
feat(ingest): add HTML hash provenance skipping (Milestone 5.9.4) with provenance table, hash comparison, processed/skipped metrics, and tests

feat(ingest): automate post-scrape ingestion (Milestone 5.9.5) adding PostScrapeIngestionHook, bootstrap + MainWindow integration, sqlite_conn auto-registration, integration test (post-scrape ingestion events), and roadmap update
feat(data): repository-backed team roster loading (Milestone 5.9.6) introducing TeamDataService, integrating into RosterLoadWorker, and adding unit test
feat(data): division standings service (Milestone 5.9.7) adding DivisionDataService with computed standings from matches (points W=2/D=1/L=0), integrating into MainWindow.open_division_table, adding unit test, and updating roadmap
feat(gating): add DataStateService and gate team/division UI until ingestion present; modify LandingLoadWorker to avoid live pre-scrape HTTP load; add DataStateService tests and empty-state status message
chore(roadmap): mark 5.9.25 partial ([~]) noting DataStateService gating progress
fix(scrape): ensure all club overview teams are scraped and persisted (both club_team_* and team_roster_* forms); augment pipeline to always include primary club id, backfill missing roster files, add coverage test

feat(cli): add ingest-only command (Milestone 5.9.21) with schema bootstrap, JSON/human output, consistency validation inclusion, test
feat(commands): add Command Palette actions for force re-ingest & data freshness (Milestone 5.9.22) with registration module and tests
docs(adr): add ADR-0001 for ingestion lifecycle & repository abstraction (Milestone 5.9.23) with presence test
feat(logging): structured JSONL ingest event logging (Milestone 5.9.24) with start/division/error/complete events & test
feat(ingest): add GracefulIngestService to summarize available data after partial ingests; add tests and roadmap update (5.9.26)
feat(parser): add ParserRegistry for plugin parsers with exception isolation + tests (5.9.27)
chore(security): add basic HTML sanitizer helper for GUI previews; tests and roadmap update (5.9.28)
feat(telemetry): add TelemetryService counters for ingest metrics + tests (5.9.29)

chore(ingest): gate placeholder generation behind SettingsService.allow_placeholders (5.9.30 ~in-progress)
 - Introduce `SettingsService` singleton with `allow_placeholders` flag (default True)
 - Update `MainWindow.open_division_table` to consult setting before producing placeholders
 - Add tests for SettingsService; roadmap updated to [~]

docs(roadmap): add Milestone 5.10 Visual Polish & Design Integration leveraging existing design system tokens (color, typography, elevation, motion) with detailed subtasks (5.10.1–5.10.20)
docs(roadmap): expand Milestone 5.10 with advanced UI polish tasks (5.10.21–5.10.70) covering gradients, glass surfaces, adaptive contrast, motion choreography, accessibility overlays, performance instrumentation, theme experimentation, and visual regression hooks
chore(roadmap): mark 5.9.30 complete (placeholder generation gated & deprecation path noted)
feat(design): apply design tokens to DivisionTableView (title + table styling), add QSS generation test & hex drift check, mark 5.10.1 complete

feat(design): complete elevation layering (Milestone 5.10.2) adding semantic ElevationRole mapping, role-based application in MainWindow (primary vs secondary vs floating), optimized level 0 clearing, and unit tests validating role levels & shadow spec behavior; roadmap updated

feat(lock): improve single-instance guard with stale PID reclamation (Windows safe fallback) and optional psutil usage
feat(typography): implement semantic TypographyRole mapping (Milestone 5.10.3), apply to DivisionTableView title & navigation dock labels, add unit test, roadmap updated

feat(lock): make psutil optional and refine stale PID detection logic
feat(iconography): add IconRegistry with SVG discovery, refresh icon integration, tests, mark 5.10.4 partial
feat(iconography): complete Milestone 5.10.4 with additional icons (save, folder-open), button integration, caching & color tint variant, tests, roadmap updated
feat(motion): complete Milestone 5.10.5 adding animator helpers (dock show/hide, tab crossfade) using motion tokens, roadmap updated, tests added
feat(theme): complete Milestone 5.10.6 adding theme variant toggle actions (default/brand-neutral/high-contrast), ThemeService bootstrap registration, test, roadmap updated
feat(theme): unify focus ring styling via theme QSS (Milestone 5.10.8) and add test_focus_ring_qss
feat(empty-state): introduce EmptyStateRegistry & EmptyStateWidget, integrate into PlayerDetailView, add tests, mark 5.10.9 partial
feat(empty-state): extend integration to DivisionTableView (no rows case) and update roadmap 5.10.9 note
feat(empty-state): integrate into ClubDetailView and HtmlSourceView, add templates/tests, update roadmap (5.10.9 progress)
chore(roadmap): mark 5.10.8 complete post focus ring QSS audit
test(view): add DivisionTableView empty state activation test and helper (Milestone 5.10.9)
feat(empty-state): finalize 5.10.9 – add helper methods, division empty state test, mark roadmap complete

feat(theme): add extended overlay theme variants (midnight, dim, ocean, forest, mono-high, slate-light, solarized-light, high-contrast-light) with contrast normalization & dynamic menu population
feat(theme): contrast normalization for text.primary & text.muted (auto fallback) and available_variants API
feat(theme): stylesheet application performance guard utility + unit test (Milestone 5.10.17) and roadmap update
feat(plugin-style): add PluginStyleContractPanel with validator service & test (Milestone 5.10.18)
docs(design): add visual integration guide and presence test (Milestone 5.10.19)
docs(adr): add ADR-0002 progressive visual enhancement strategy (Milestone 5.10.20) with presence test
feat(gradients): add gradient & tonal ramp registry with defaults and tests (Milestone 5.10.21)

